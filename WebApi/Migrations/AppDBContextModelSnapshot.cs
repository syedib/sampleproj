// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c12b6b1-26be-454a-b32e-fee36d0853c1"),
                            Description = "PC One",
                            Name = "PC",
                            Price = 10m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = new Guid("7d0bc73f-89ec-48d4-8417-2d7e785aec77"),
                            Description = "Smart Watch",
                            Name = "Smart Watch",
                            Price = 15m,
                            Quantity = 500
                        },
                        new
                        {
                            Id = new Guid("1dcc375d-752e-4e2d-bea0-571bb849ac46"),
                            Description = "Mobiles",
                            Name = "Mobile Phone",
                            Price = 12m,
                            Quantity = 1308
                        },
                        new
                        {
                            Id = new Guid("7e87e47d-bd80-4f0f-8eca-a70764079dd0"),
                            Description = "TV",
                            Name = "Television",
                            Price = 12m,
                            Quantity = 340
                        },
                        new
                        {
                            Id = new Guid("0f1d41e8-f929-4f99-b0a7-f82d3ce557e9"),
                            Description = "IPAD",
                            Name = "IPad",
                            Price = 10m,
                            Quantity = 34
                        });
                });

            modelBuilder.Entity("WebApi.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "302ff4a8-93b3-4680-a328-f327ebff24f0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "13b7cad7-cb26-474f-9246-f4730a6f64ea",
                            DateOfBirth = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "ADMIN@TEST.COM",
                            EmailConfirmed = false,
                            FullName = "",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@TEST.COM",
                            NormalizedUserName = "ADMIN@TEST.COM",
                            PasswordHash = "$2a$11$LNKgzaeYMjV9iS/rj4WeieJpKNj8LxY2e/cjTcIfdtDo0cXELwsby",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b4c1dafb-2f06-4fb8-804f-2e6f5e792ef3",
                            TwoFactorEnabled = false,
                            UserName = "admin@test.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
